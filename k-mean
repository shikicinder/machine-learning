k=2;
A = im2double（imread('new.jpg')）; %convert unit-8 to double
[m,n]=size(imread('new.jpg'));%get pixel size
n=n/3;
x=[75,190];    %initialize centers
y=[120,120];
while 1
    x_previous=x;  %save old centers
    y_previous=y;    
    for i=1:m
        for j=1:n
            for t=1:k
                if x(t)~=0 && y(t)~=0
                    distance(t)= ((A(i,j,1)-A(x(t),y(t),1))^2)+((A(i,j,2)-A(x(t),y(t),2))^2)+((A(i,j,3)-A(x(t),y(t),3))^2);%calculate distance between centers
                end
            end
            [c,r]=find(distance==min(distance)); %find nearest center
            label(i,j)=r(1);             
        end       
    end        
    for t=1:k
        x(t)=0;
        y(t)=0;
        count=0;
        for i=1:m
            for j=1:n
                if label(i,j)==t
                    x(t)=x(t)+i;  
                    y(t)=y(t)+j;
                    count=count+1;                    
                end
            end
        end
        if count==0 %if there is no label equal to t, count will be zero and x or y is NAN, it can cause error
            count=1;
        end
        x(t)=round(x(t)/count,0);  %find new centers(x is zero if there is no label is t)
        y(t)=round(y(t)/count,0);        
    end
    error=0;
    for t=1:k
        if x(t)~=0 && y(t)~=0
            error=error+(x_previous(t)-x(t))^2+(y_previous(t)-y(t))^2; 
        end
    end
    if abs(error)<10 %set error limitation
        break
    end    
end
for t=1:k
    if x(t)~=0 && y(t)~=0
        center(1,t,:)=A(x(t),y(t),:);
    else center(1,t,:)=[0,0,0];
    end
end
for i=1:m
        for j=1:n
            for t=1:k
                if label(i,j)==t
                    B(i,j,:)=im2unit8(center(1,t,:)); % replace pixel with the center of the cluster assigned to it
                end
            end
        end
end
figure;
imshow(B);
